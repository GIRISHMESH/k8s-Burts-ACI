# =========================================================
# 7️⃣ Nginx Deployment, Service & HPA (Updated)
# =========================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-web
  namespace: __NAMESPACE__
spec:
  replicas: __NGINX_REPLICAS__
  selector:
    matchLabels:
      app: nginx-web
  template:
    metadata:
      labels:
        app: nginx-web
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        type: virtual-kubelet
      tolerations:
        - key: virtual-kubelet.io/provider
          operator: Exists
        - key: azure.com/aci
          effect: NoSchedule
      initContainers:
        - name: wait-for-mysql
          image: bitnami/mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
          command: ["sh","-c","/opt/bitnami/scripts/mysql/wait-for-mysql.sh"]
      imagePullSecrets:
        - name: acr-pull-secret
      containers:
        - name: nginx
          image: __ACR_NAME__.azurecr.io/nginx-web:__IMAGE_TAG__
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10

# =========================================================
# 8️⃣ App1 Deployment, Service & HPA (Updated)
# =========================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: __NAMESPACE__
spec:
  replicas: __APP1_REPLICAS__
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        type: virtual-kubelet
      tolerations:
        - key: virtual-kubelet.io/provider
          operator: Exists
        - key: azure.com/aci
          effect: NoSchedule
      imagePullSecrets:
        - name: acr-pull-secret
      containers:
        - name: app1
          image: __ACR_NAME__.azurecr.io/app1:__IMAGE_TAG__
          args: ["-text=Hello from App1"]
          ports:
            - containerPort: 5678
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 400m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 5678
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 5678
            initialDelaySeconds: 15
            periodSeconds: 15

# =========================================================
# 9️⃣ App2 Deployment, Service & HPA (Updated)
# =========================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  namespace: __NAMESPACE__
spec:
  replicas: __APP2_REPLICAS__
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        type: virtual-kubelet
      tolerations:
        - key: virtual-kubelet.io/provider
          operator: Exists
        - key: azure.com/aci
          effect: NoSchedule
      imagePullSecrets:
        - name: acr-pull-secret
      containers:
        - name: app2
          image: __ACR_NAME__.azurecr.io/app2:__IMAGE_TAG__
          args: ["-text=Hello from App2"]
          ports:
            - containerPort: 5678
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 400m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 5678
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 5678
            initialDelaySeconds: 15
            periodSeconds: 15
